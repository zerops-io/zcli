name: Main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build && tests for ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    env:
      CGO_ENABLED: '0'
    strategy:
      matrix:
        include:
          - name: linux amd64
            os: ubuntu-latest
            osEnv: GOOS=linux GOARCH=amd64
            runLint: true
            runTests: true

          - name: linux 386
            os: ubuntu-latest
            osEnv: GOOS=linux GOARCH=386
            runLint: true
            runTests: true

          - name: darwin amd64
            os: macos-latest
            osEnv: GOOS=darwin GOARCH=amd64
            runLint: true
            runTests: true

          - name: darwin arm64
            os: macos-latest
            osEnv: GOOS=darwin GOARCH=arm64
            runLint: false
            runTests: false

          - name: windows amd64
            os: ubuntu-latest
            osEnv: GOOS=windows GOARCH=amd64
            runLint: false
            runTests: false

    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Set up Go 1.x
      uses: actions/setup-go@v5
      with:
        go-version-file: "go.mod"
      id: go

    - name: Get dependencies
      run: | 
        export GOPATH=$HOME/go
        ./tools/install.sh

    - name: Build
      run: env ${{ matrix.osEnv }} go build -v ./cmd/... ./src/...

    - name: Test
      if: ${{ matrix.runTests }}
      run: env ${{ matrix.osEnv }} go test -v ./cmd/... ./src/...

    - name: Lint
      if: ${{ matrix.runLint }}
      run: env ${{ matrix.osEnv }} gomodrun golangci-lint run  ./cmd/... ./src/... --verbose
